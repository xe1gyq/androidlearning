=============================================================================================
HAL Layer
=============================================================================================

Proxy
Marshals the data to the service through the binder

Stub Class
Receives the data (on the service side) via onTransact and unmarshals the data and passed it
up to the implementation of the service

3rd Party Service
- Runs if an activity needs them and kept in memory if thee is enough memory
  to keep them cached
- Takes time to load
  . An application sends an intent to Activit	ManagerService
  . Activity Manager Services asks from the PackageManagerService (which knows the location
    of the DEX file) to talk to Zygote to start the application (.dex)
  . Once the .dex file is loaded and the application started, the application communicates
    to the AMS and register itself to it
  . The the AMS calls with onServiceConnected to the application along with the iBinder
    object and now the application has a proxy to the service

=============================================================================================
Android Boot Up
=============================================================================================

 1. Power Button
 2. CPU Firmware
 3. Bootloader
 4. Kernel
    Memory
    Graphics
    Power Management
    Graphics
 5. Init
    init.*.rc
    init.rc
    Chmod
    Chown
    Filesystem Setup
    ~/aosp/out/target/product/balam/root

   service lmkd /system/bin/lmkd
    class core
    critical
    socket lmkd seqpacket 0660 system system

   service ueventd /sbin/ueventd
    class core
    critical
    seclabel u:r:ueventd:s0

   service servicemanager /system/bin/servicemanager
    class core
    user system
    group system
    critical
    onrestart restart healthd
    onrestart restart zygote
    onrestart restart media
    onrestart restart surfaceflinger
    onrestart restart drm

   service surfaceflinger /system/bin/surfaceflinger
    class core
    user system
    group graphics drmrpc
    onrestart restart zygote

  init.goldfish.rc
  File: init.zygote32.rc
  service zygote /system/bin/app_process -Xzygote /system/bin --zygote --start-system-server
    class main
    socket zygote stream 660 root system
    onrestart write /sys/android_power/request_state wake
    onrestart write /sys/power/state on
    onrestart restart media
    onrestart restart netd

     Adbd
     Logd

  6. Service Manager
     healthd
     surface flinger
     zygote
     repo grep init.grouper.rc
  7. Zygote C++ 
     ToDo! http://roylee17.blogspot.com/2011/02/zygote-initialization-flow.html
     ART Virtual Machine started
     $ ls ~/aosp/dalvik/
     Zygote Java
      $ "ZygoteInit.java"
      Socket
      Load +2600 Classes
      Garbage Collector
      System Server
  8. System Erver
     Package Manager Service
     Activity Manager Service
  9. Activity Manager Service
     System External Intel
     HOME Launcher
     3rd Party Services (WhatsApp)

     Logo

     service bootanim /system/bin/bootanimation
      class core
      user graphics
      group graphics audio
      disabled
      oneshot

=============================================================================================
LogCat
=============================================================================================

$ logcat -b system
$ logcat -b crash
$ dumpsys SurfaceFlinger
$ dumpsys | grep "DUMP OF SERVICE"
$ dmesg
$ cat /proc/kmsg
$ ls /data/tombstone
$ make menuconfig # Kernel Hacking

ToDo! dumpsys audio
ToDo! Write an article about all logging & debugging
ToDo! Script to Debug

=============================================================================================
Root A Device
=============================================================================================

$ cat default.prop

#
# ADDITIONAL_DEFAULT_PROPERTIES
#
ro.secure=1
ro.allow.mock.location=0
ro.debuggable=1
ro.zygote=zygote32
dalvik.vm.dex2oat-Xms=64m
dalvik.vm.dex2oat-Xmx=512m
dalvik.vm.image-dex2oat-Xms=64m
dalvik.vm.image-dex2oat-Xmx=64m
ro.dalvik.vm.native.bridge=0
persist.sys.usb.config=adb

AOSP/out/../grouper/
$ repo grep init.grouper.rc
adb reboot bootloader

=============================================================================================
Libmrknlog
=============================================================================================

struct    copy
struct *  address of the structure, already created
struct ** we are creating device and returning a device

Debug Time

$ ls /system/lib/hw/balamator.default.so
Create a crash diving by 0 and update files
$ adb remount
$ adb sync
$ adb forward tcp:5039 tcp:5039 # Server
$ adb shell # Server
# gdbserver :5029 /system/bin/balamator # Server
Process /system/bin/balamator created; pid = 1801
Listening on port 5029
$ echo $ANDROID_PRODUCT_OUT # Client
/home/student/android-ia/out/target/product/mini-emulator-x86
$ export SYMBOLS=$ANDROID_PRODUCT_OUT/symbols/
$ export SYMBOLS_LIB=$ANDROID_PRODUCT_OUT/symbols/system/lib
$ $ANDROID_TOOLCHAIN/x86_64-linux-android-gdb \
  -ex "set solib-search-path $SYMBOLS_LIB:$SYMBOLS_LIB/hw:$SYMBOLS_LIB/ssl/engines:$SYMBOLS_LIB/drm:$SYMBOLS_LIB/egl:$SYMBOLS_LIB/soundfx" \
  -ex "target remote :5039" \
  --quiet \
  $SYMBOLS/system/bin/balamator

Bug!
https://github.com/xe1gyq/linuxlearning/blob/master/android/netavam/balam/framework/libbalamator_jni/jni/com_netavam_android_lib_balam_LibBalam.cpp
private int nativeHandle
ToDo! Investigate a field ID
ToDo! Fix bug seeing nativeHandle from
https://github.com/thenewcircle/alpha/blob/efe19a6dd2fceab44e645f06adebd2910fcac407/framework/libmrknlog_jni/jni/com_marakana_android_lib_log_LibLog.cpp

DDMS

Do not take more than 5 seconds, if so, create an async task, a thread
At Phone, Developers Options

=============================================================================================
Binder
=============================================================================================

Every application process will have at least 2 binder threads
 Whenever we use one of them, the application will have way to communicate
IOCTL Polling
$ cat drivers/staging/android/logger.c
Example?
$ cat /proc/kmsg
IOCTL Blocking

$ cat /d/binder/stats | grep "proc"
root@mini-emulator-x86:/d/binder # cat stats | grep "proc"                     
proc: active 16 total 18
proc 1662
proc 1635
proc 1613
proc 1579
proc 1543
proc 1478
proc 1458
proc 1364
proc 1311
proc 1209
proc 937
proc 936
proc 924
proc 939
proc 922
proc 920
$ ps -aux | grep <id>
u0_a14    1662  940   492288 36740 ffffffff b768b815 S com.netavam.android.balamatornative
u0_a3     1635  940   495272 35728 ffffffff b768b815 S android.process.media
u0_a9     1613  940   490464 28444 ffffffff b768b815 S com.android.printspooler
u0_a12    1579  940   489920 26516 ffffffff b768b815 S com.android.smspush
u0_a1     1543  940   495960 35784 ffffffff b768b815 S android.process.acore
u0_a6     1478  940   489204 35984 ffffffff b768b815 S com.example.android.home
radio     1458  940   505460 40428 ffffffff b768b815 S com.android.phone
u0_a7     1364  940   506980 39496 ffffffff b768b815 S com.android.inputmethod.latin
u0_a4     1311  940   511812 51100 ffffffff b768b815 S com.android.systemui
system    1209  940   588648 78804 ffffffff b768b815 S system_server
media     937   1     108580 9812  ffffffff b76e46a6 S /system/bin/mediaserver
drm       936   1     16832  3932  ffffffff b76776a6 S /system/bin/drmserver
system    924   1     24080  5664  ffffffff b771d815 S /system/bin/surfaceflinger
keystore  939   1     7828   2164  c056a888 b76ed6a6 S /system/bin/keystore
system    922   1     3844   840   c056a888 b77506a6 S /system/bin/servicemanager
root      920   1     4000   456   c02d65b4 08095ab5 S /sbin/healthd

ToDo! Create a script to get active processes and grab lot of info about them in other
services

Fun! https://www.vis.ethz.ch/en/visionen/pdfs/2014/visionen_2014_3.pdf?end=52&start=50

# Enf of File
